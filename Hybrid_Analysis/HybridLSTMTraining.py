#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Dec 7 18:05:27 2020

@author: hallavar
"""

import sys
sys.path.append('../')
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from keras.models import Sequential
from keras.layers import Dense, Dropout, Masking, LSTM
from common import load_firstlayer_data, create_secondlayer_partition, DataGenerator


Istlayer_dataset_path = "../../Datasets/API-Intent-Traffic/Other_CSVs/1st_Layer/"
train_samples, train_labels=load_firstlayer_data(Istlayer_dataset_path, data='Testing')
rf= RandomForestClassifier(criterion='entropy', max_features=2, max_leaf_nodes=552,n_estimators=163)
rf.fit(train_samples, train_labels)

static_df=pd.read_csv(Istlayer_dataset_path+'StaticLayer_Intent_and_Permission_Bening&malware_'+'Training'+'Smaples.csv')

partition, test = create_secondlayer_partition(Istlayer_dataset_path,'../../Datasets/',3/4,1/4)

training_generator = DataGenerator(partition['train'], rf, static_df)
validation_generator = DataGenerator(partition['validation'], rf, static_df)

special_value= -1

model = Sequential()
model.add(Masking(mask_value=special_value))
model.add(LSTM(128, return_sequences=True))
model.add(LSTM(64, return_sequences=True))
model.add(LSTM(32))
model.add(Dropout(rate=0.2))
model.add(Dense(2, activation='sigmoid'))
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(x=training_generator, epochs=10)