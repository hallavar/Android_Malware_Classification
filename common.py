#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Nov 22 14:15:25 2020

@author: hallavar
"""
import pandas as pd
from sklearn.metrics import confusion_matrix

def load_firstlayer_data(path, data):
    df = pd.read_csv(path+'StaticLayer_Intent_and_Permission_Bening&malware_'+data+'Smaples.csv')

    d ={'Malware': True, 'Benign': False}
    df['Binary_Type']=df['Binary_Type'].map(d)
      
    labels=df['Binary_Type']
    df.drop(['Binary_Type','<family>','<category>', '<MD5>'], inplace=True, axis=1)
    samples=df
    return samples, labels

def get_metrics(true_labels,predictions, get_cm=True):
    cm=confusion_matrix(true_labels,predictions)

    tn, fp, fn, tp = cm.ravel()
    N=len(predictions)

    accuracy=(tn+tp)/N
    precision=tp/(tp+fp)
    recall=tp/(tp+fn)
    f1=2*(precision*recall)/(precision+recall)
    
    if get_cm:
        return cm, accuracy, precision, recall, f1
    else:
        return accuracy, precision, recall, f1